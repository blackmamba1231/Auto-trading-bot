{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://D%3A/auto-trading-bot/fe/src/app/settings/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\n\ninterface ApiKeys {\n  azbit: {\n    apiKey: string;\n    apiSecret: string;\n  };\n  p2pb2b: {\n    apiKey: string;\n    apiSecret: string;\n  };\n}\n\nexport default function SettingsPage() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n  const [saveSuccess, setSaveSuccess] = useState<boolean | null>(null);\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\n  \n  // API keys state\n  const [apiKeys, setApiKeys] = useState<ApiKeys>({\n    azbit: {\n      apiKey: '',\n      apiSecret: ''\n    },\n    p2pb2b: {\n      apiKey: '',\n      apiSecret: ''\n    }\n  });\n\n  // Check authentication on component mount\n  useEffect(() => {\n    const token = localStorage.getItem('auth_token');\n    if (!token) {\n      window.location.href = '/login';\n      return;\n    }\n    \n    // Fetch current API keys\n    fetchApiKeys();\n    \n    setIsAuthenticated(true);\n    setIsLoading(false);\n  }, []);\n\n  // Fetch current API keys from server\n  const fetchApiKeys = async () => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch('/api/settings', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      if (response.status === 401) {\n        // Token expired or invalid\n        localStorage.removeItem('auth_token');\n        window.location.href = '/login';\n        return;\n      }\n      \n      if (!response.ok) {\n        throw new Error('Failed to fetch API keys');\n      }\n      \n      const data = await response.json();\n      if (data.success) {\n        setApiKeys(data.data);\n      }\n    } catch (error) {\n      console.error('Error fetching API keys:', error);\n      // Use default empty values\n    }\n  };\n\n  // Handle input changes\n  const handleInputChange = (exchange: 'azbit' | 'p2pb2b', field: 'apiKey' | 'apiSecret', value: string) => {\n    setApiKeys(prev => ({\n      ...prev,\n      [exchange]: {\n        ...prev[exchange],\n        [field]: value\n      }\n    }));\n  };\n\n  // Save API keys\n  const saveApiKeys = async () => {\n    setIsSaving(true);\n    setSaveSuccess(null);\n    setErrorMessage(null);\n    \n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch('/api/settings', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({ apiKeys })\n      });\n      \n      if (response.status === 401) {\n        // Token expired or invalid\n        localStorage.removeItem('auth_token');\n        window.location.href = '/login';\n        return;\n      }\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setSaveSuccess(true);\n        setTimeout(() => setSaveSuccess(null), 3000);\n      } else {\n        setErrorMessage(data.error || 'Failed to save API keys');\n        setSaveSuccess(false);\n      }\n    } catch (error) {\n      console.error('Error saving API keys:', error);\n      setErrorMessage('An error occurred while saving API keys');\n      setSaveSuccess(false);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  // Reset to default API keys\n  const resetToDefault = async () => {\n    setIsSaving(true);\n    setSaveSuccess(null);\n    setErrorMessage(null);\n    \n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch('/api/settings/reset', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      if (response.status === 401) {\n        // Token expired or invalid\n        localStorage.removeItem('auth_token');\n        window.location.href = '/login';\n        return;\n      }\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setApiKeys(data.data);\n        setSaveSuccess(true);\n        setTimeout(() => setSaveSuccess(null), 3000);\n      } else {\n        setErrorMessage(data.error || 'Failed to reset API keys');\n        setSaveSuccess(false);\n      }\n    } catch (error) {\n      console.error('Error resetting API keys:', error);\n      setErrorMessage('An error occurred while resetting API keys');\n      setSaveSuccess(false);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center items-center min-h-screen bg-gray-100 dark:bg-gray-900\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\n      </div>\n    );\n  }\n\n  if (!isAuthenticated) {\n    return null; // Will redirect to login in useEffect\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 dark:bg-gray-900 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-3xl mx-auto\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n          className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 mb-8\"\n        >\n          <div className=\"flex justify-between items-center mb-6\">\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">API Settings</h1>\n            <a href=\"/\" className=\"text-blue-500 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300\">\n              Back to Dashboard\n            </a>\n          </div>\n          \n          {saveSuccess === true && (\n            <div className=\"mb-4 p-3 bg-green-100 text-green-700 rounded-md\">\n              API keys saved successfully!\n            </div>\n          )}\n          \n          {saveSuccess === false && (\n            <div className=\"mb-4 p-3 bg-red-100 text-red-700 rounded-md\">\n              {errorMessage || 'Failed to save API keys'}\n            </div>\n          )}\n          \n          <div className=\"space-y-8\">\n            {/* Azbit API Keys */}\n            <div className=\"border-b border-gray-200 dark:border-gray-700 pb-6\">\n              <h2 className=\"text-xl font-semibold text-gray-800 dark:text-white mb-4\">Azbit API Keys</h2>\n              <div className=\"grid grid-cols-1 gap-4\">\n                <div>\n                  <label htmlFor=\"azbit-api-key\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                    API Key\n                  </label>\n                  <input\n                    id=\"azbit-api-key\"\n                    type=\"text\"\n                    value={apiKeys.azbit.apiKey}\n                    onChange={(e) => handleInputChange('azbit', 'apiKey', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\n                    placeholder=\"Enter Azbit API Key\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"azbit-api-secret\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                    API Secret\n                  </label>\n                  <input\n                    id=\"azbit-api-secret\"\n                    type=\"password\"\n                    value={apiKeys.azbit.apiSecret}\n                    onChange={(e) => handleInputChange('azbit', 'apiSecret', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\n                    placeholder=\"Enter Azbit API Secret\"\n                  />\n                </div>\n              </div>\n            </div>\n            \n            {/* P2PB2B API Keys */}\n            <div className=\"pb-6\">\n              <h2 className=\"text-xl font-semibold text-gray-800 dark:text-white mb-4\">P2PB2B API Keys</h2>\n              <div className=\"grid grid-cols-1 gap-4\">\n                <div>\n                  <label htmlFor=\"p2pb2b-api-key\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                    API Key\n                  </label>\n                  <input\n                    id=\"p2pb2b-api-key\"\n                    type=\"text\"\n                    value={apiKeys.p2pb2b.apiKey}\n                    onChange={(e) => handleInputChange('p2pb2b', 'apiKey', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\n                    placeholder=\"Enter P2PB2B API Key\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"p2pb2b-api-secret\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                    API Secret\n                  </label>\n                  <input\n                    id=\"p2pb2b-api-secret\"\n                    type=\"password\"\n                    value={apiKeys.p2pb2b.apiSecret}\n                    onChange={(e) => handleInputChange('p2pb2b', 'apiSecret', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\n                    placeholder=\"Enter P2PB2B API Secret\"\n                  />\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"flex justify-between pt-4\">\n              <button\n                onClick={resetToDefault}\n                className=\"px-4 py-2 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                disabled={isSaving}\n              >\n                Reset to Default\n              </button>\n              <button\n                onClick={saveApiKeys}\n                className=\"px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                disabled={isSaving}\n              >\n                {isSaving ? (\n                  <span className=\"flex items-center\">\n                    <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                    Saving...\n                  </span>\n                ) : 'Save API Keys'}\n              </button>\n            </div>\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAee,SAAS;IACtB,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB;IAC/D,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAEhE,iBAAiB;IACjB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;QAC9C,OAAO;YACL,QAAQ;YACR,WAAW;QACb;QACA,QAAQ;YACN,QAAQ;YACR,WAAW;QACb;IACF;IAEA,0CAA0C;IAC1C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,IAAI,CAAC,OAAO;YACV,OAAO,QAAQ,CAAC,IAAI,GAAG;YACvB;QACF;QAEA,yBAAyB;QACzB;QAEA,mBAAmB;QACnB,aAAa;IACf,GAAG,EAAE;IAEL,qCAAqC;IACrC,MAAM,eAAe;QACnB,IAAI;YACF,MAAM,QAAQ,aAAa,OAAO,CAAC;YACnC,MAAM,WAAW,MAAM,MAAM,iBAAiB;gBAC5C,SAAS;oBACP,iBAAiB,CAAC,OAAO,EAAE,OAAO;gBACpC;YACF;YAEA,IAAI,SAAS,MAAM,KAAK,KAAK;gBAC3B,2BAA2B;gBAC3B,aAAa,UAAU,CAAC;gBACxB,OAAO,QAAQ,CAAC,IAAI,GAAG;gBACvB;YACF;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,IAAI,KAAK,OAAO,EAAE;gBAChB,WAAW,KAAK,IAAI;YACtB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,2BAA2B;QAC7B;IACF;IAEA,uBAAuB;IACvB,MAAM,oBAAoB,CAAC,UAA8B,OAA+B;QACtF,WAAW,CAAA,OAAQ,CAAC;gBAClB,GAAG,IAAI;gBACP,CAAC,SAAS,EAAE;oBACV,GAAG,IAAI,CAAC,SAAS;oBACjB,CAAC,MAAM,EAAE;gBACX;YACF,CAAC;IACH;IAEA,gBAAgB;IAChB,MAAM,cAAc;QAClB,YAAY;QACZ,eAAe;QACf,gBAAgB;QAEhB,IAAI;YACF,MAAM,QAAQ,aAAa,OAAO,CAAC;YACnC,MAAM,WAAW,MAAM,MAAM,iBAAiB;gBAC5C,QAAQ;gBACR,SAAS;oBACP,gBAAgB;oBAChB,iBAAiB,CAAC,OAAO,EAAE,OAAO;gBACpC;gBACA,MAAM,KAAK,SAAS,CAAC;oBAAE;gBAAQ;YACjC;YAEA,IAAI,SAAS,MAAM,KAAK,KAAK;gBAC3B,2BAA2B;gBAC3B,aAAa,UAAU,CAAC;gBACxB,OAAO,QAAQ,CAAC,IAAI,GAAG;gBACvB;YACF;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,KAAK,OAAO,EAAE;gBAChB,eAAe;gBACf,WAAW,IAAM,eAAe,OAAO;YACzC,OAAO;gBACL,gBAAgB,KAAK,KAAK,IAAI;gBAC9B,eAAe;YACjB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;YACxC,gBAAgB;YAChB,eAAe;QACjB,SAAU;YACR,YAAY;QACd;IACF;IAEA,4BAA4B;IAC5B,MAAM,iBAAiB;QACrB,YAAY;QACZ,eAAe;QACf,gBAAgB;QAEhB,IAAI;YACF,MAAM,QAAQ,aAAa,OAAO,CAAC;YACnC,MAAM,WAAW,MAAM,MAAM,uBAAuB;gBAClD,QAAQ;gBACR,SAAS;oBACP,iBAAiB,CAAC,OAAO,EAAE,OAAO;gBACpC;YACF;YAEA,IAAI,SAAS,MAAM,KAAK,KAAK;gBAC3B,2BAA2B;gBAC3B,aAAa,UAAU,CAAC;gBACxB,OAAO,QAAQ,CAAC,IAAI,GAAG;gBACvB;YACF;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,KAAK,OAAO,EAAE;gBAChB,WAAW,KAAK,IAAI;gBACpB,eAAe;gBACf,WAAW,IAAM,eAAe,OAAO;YACzC,OAAO;gBACL,gBAAgB,KAAK,KAAK,IAAI;gBAC9B,eAAe;YACjB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;YAC3C,gBAAgB;YAChB,eAAe;QACjB,SAAU;YACR,YAAY;QACd;IACF;IAEA,IAAI,WAAW;QACb,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,IAAI,CAAC,iBAAiB;QACpB,OAAO,MAAM,sCAAsC;IACrD;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;gBACT,SAAS;oBAAE,SAAS;oBAAG,GAAG;gBAAG;gBAC7B,SAAS;oBAAE,SAAS;oBAAG,GAAG;gBAAE;gBAC5B,YAAY;oBAAE,UAAU;gBAAI;gBAC5B,WAAU;;kCAEV,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAmD;;;;;;0CACjE,8OAAC;gCAAE,MAAK;gCAAI,WAAU;0CAAgF;;;;;;;;;;;;oBAKvG,gBAAgB,sBACf,8OAAC;wBAAI,WAAU;kCAAkD;;;;;;oBAKlE,gBAAgB,uBACf,8OAAC;wBAAI,WAAU;kCACZ,gBAAgB;;;;;;kCAIrB,8OAAC;wBAAI,WAAU;;0CAEb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAG,WAAU;kDAA2D;;;;;;kDACzE,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;;kEACC,8OAAC;wDAAM,SAAQ;wDAAgB,WAAU;kEAAkE;;;;;;kEAG3G,8OAAC;wDACC,IAAG;wDACH,MAAK;wDACL,OAAO,QAAQ,KAAK,CAAC,MAAM;wDAC3B,UAAU,CAAC,IAAM,kBAAkB,SAAS,UAAU,EAAE,MAAM,CAAC,KAAK;wDACpE,WAAU;wDACV,aAAY;;;;;;;;;;;;0DAGhB,8OAAC;;kEACC,8OAAC;wDAAM,SAAQ;wDAAmB,WAAU;kEAAkE;;;;;;kEAG9G,8OAAC;wDACC,IAAG;wDACH,MAAK;wDACL,OAAO,QAAQ,KAAK,CAAC,SAAS;wDAC9B,UAAU,CAAC,IAAM,kBAAkB,SAAS,aAAa,EAAE,MAAM,CAAC,KAAK;wDACvE,WAAU;wDACV,aAAY;;;;;;;;;;;;;;;;;;;;;;;;0CAOpB,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAG,WAAU;kDAA2D;;;;;;kDACzE,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;;kEACC,8OAAC;wDAAM,SAAQ;wDAAiB,WAAU;kEAAkE;;;;;;kEAG5G,8OAAC;wDACC,IAAG;wDACH,MAAK;wDACL,OAAO,QAAQ,MAAM,CAAC,MAAM;wDAC5B,UAAU,CAAC,IAAM,kBAAkB,UAAU,UAAU,EAAE,MAAM,CAAC,KAAK;wDACrE,WAAU;wDACV,aAAY;;;;;;;;;;;;0DAGhB,8OAAC;;kEACC,8OAAC;wDAAM,SAAQ;wDAAoB,WAAU;kEAAkE;;;;;;kEAG/G,8OAAC;wDACC,IAAG;wDACH,MAAK;wDACL,OAAO,QAAQ,MAAM,CAAC,SAAS;wDAC/B,UAAU,CAAC,IAAM,kBAAkB,UAAU,aAAa,EAAE,MAAM,CAAC,KAAK;wDACxE,WAAU;wDACV,aAAY;;;;;;;;;;;;;;;;;;;;;;;;0CAMpB,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCACC,SAAS;wCACT,WAAU;wCACV,UAAU;kDACX;;;;;;kDAGD,8OAAC;wCACC,SAAS;wCACT,WAAU;wCACV,UAAU;kDAET,yBACC,8OAAC;4CAAK,WAAU;;8DACd,8OAAC;oDAAI,WAAU;oDAA6C,OAAM;oDAA6B,MAAK;oDAAO,SAAQ;;sEACjH,8OAAC;4DAAO,WAAU;4DAAa,IAAG;4DAAK,IAAG;4DAAK,GAAE;4DAAK,QAAO;4DAAe,aAAY;;;;;;sEACxF,8OAAC;4DAAK,WAAU;4DAAa,MAAK;4DAAe,GAAE;;;;;;;;;;;;gDAC/C;;;;;;mDAGN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQpB"}},
    {"offset": {"line": 510, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}
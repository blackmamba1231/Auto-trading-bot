{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/auto-trading-bot/fe/src/components/Dashboard.tsx"],"sourcesContent":["import React from 'react';\nimport { motion } from 'framer-motion';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\ninterface BalanceCardProps {\n  title: string;\n  amount: number;\n  currency: string;\n}\n\nconst BalanceCard: React.FC<BalanceCardProps> = ({ title, amount, currency }) => (\n  <motion.div\n    whileHover={{ scale: 1.02 }}\n    className=\"bg-gradient-to-r from-blue-500 to-cyan-500 rounded-xl p-6 shadow-lg\"\n  >\n    <h3 className=\"text-white text-lg font-medium\">{title}</h3>\n    <p className=\"text-white text-2xl font-bold mt-2\">\n      {amount.toFixed(currency === 'BTC' ? 8 : 2)} {currency}\n    </p>\n  </motion.div>\n);\n\ninterface TradeData {\n  time: string;\n  price: number;\n}\n\nconst Dashboard: React.FC = () => {\n  const [tradeData, setTradeData] = React.useState<TradeData[]>([]);\n  const [balance, setBalance] = React.useState({\n    btc: 0,\n    usdt: 0,\n  });\n\n  React.useEffect(() => {\n    // Sample data - will be replaced with actual API calls\n    const sampleData = [\n      { time: '00:00', price: 45000 },\n      { time: '04:00', price: 46000 },\n      { time: '08:00', price: 44000 },\n      { time: '12:00', price: 47000 },\n      { time: '16:00', price: 45500 },\n      { time: '20:00', price: 46500 },\n    ];\n    setTradeData(sampleData);\n  }, []);\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n      className=\"p-6\"\n    >\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n        <BalanceCard title=\"BTC Balance\" amount={balance.btc} currency=\"BTC\" />\n        <BalanceCard title=\"USDT Balance\" amount={balance.usdt} currency=\"USDT\" />\n      </div>\n\n      <div className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\">\n        <h2 className=\"text-xl font-bold mb-4 text-gray-800 dark:text-white\">Price History</h2>\n        <div className=\"h-[400px] w-full\">\n          <ResponsiveContainer>\n            <LineChart data={tradeData}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#374151\" />\n              <XAxis\n                dataKey=\"time\"\n                stroke=\"#9CA3AF\"\n                style={{ fontSize: '12px' }}\n              />\n              <YAxis\n                stroke=\"#9CA3AF\"\n                style={{ fontSize: '12px' }}\n              />\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: '#1F2937',\n                  border: 'none',\n                  borderRadius: '8px',\n                  color: '#F3F4F6'\n                }}\n              />\n              <Legend />\n              <Line\n                type=\"monotone\"\n                dataKey=\"price\"\n                stroke=\"#3B82F6\"\n                strokeWidth={2}\n                dot={{ r: 4, fill: '#3B82F6' }}\n                activeDot={{ r: 8 }}\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default Dashboard;\n"],"names":[],"mappings":";;;;AAAA;;;;;;;;;;;;;;;AAUA,MAAM,cAA0C,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,iBAC1E,8OAAC,OAAO,GAAG;QACT,YAAY;YAAE,OAAO;QAAK;QAC1B,WAAU;;0BAEV,8OAAC;gBAAG,WAAU;0BAAkC;;;;;;0BAChD,8OAAC;gBAAE,WAAU;;oBACV,OAAO,OAAO,CAAC,aAAa,QAAQ,IAAI;oBAAG;oBAAE;;;;;;;;;;;;;AAUpD,MAAM,YAAsB;IAC1B,MAAM,CAAC,WAAW,aAAa,GAAG,qMAAA,CAAA,UAAK,CAAC,QAAQ,CAAc,EAAE;IAChE,MAAM,CAAC,SAAS,WAAW,GAAG,qMAAA,CAAA,UAAK,CAAC,QAAQ,CAAC;QAC3C,KAAK;QACL,MAAM;IACR;IAEA,qMAAA,CAAA,UAAK,CAAC,SAAS,CAAC;QACd,uDAAuD;QACvD,MAAM,aAAa;YACjB;gBAAE,MAAM;gBAAS,OAAO;YAAM;YAC9B;gBAAE,MAAM;gBAAS,OAAO;YAAM;YAC9B;gBAAE,MAAM;gBAAS,OAAO;YAAM;YAC9B;gBAAE,MAAM;gBAAS,OAAO;YAAM;YAC9B;gBAAE,MAAM;gBAAS,OAAO;YAAM;YAC9B;gBAAE,MAAM;gBAAS,OAAO;YAAM;SAC/B;QACD,aAAa;IACf,GAAG,EAAE;IAEL,qBACE,8OAAC,OAAO,GAAG;QACT,SAAS;YAAE,SAAS;YAAG,GAAG;QAAG;QAC7B,SAAS;YAAE,SAAS;YAAG,GAAG;QAAE;QAC5B,YAAY;YAAE,UAAU;QAAI;QAC5B,WAAU;;0BAEV,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAY,OAAM;wBAAc,QAAQ,QAAQ,GAAG;wBAAE,UAAS;;;;;;kCAC/D,8OAAC;wBAAY,OAAM;wBAAe,QAAQ,QAAQ,IAAI;wBAAE,UAAS;;;;;;;;;;;;0BAGnE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAuD;;;;;;kCACrE,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;sCACC,cAAA,8OAAC;gCAAU,MAAM;;kDACf,8OAAC;wCAAc,iBAAgB;wCAAM,QAAO;;;;;;kDAC5C,8OAAC;wCACC,SAAQ;wCACR,QAAO;wCACP,OAAO;4CAAE,UAAU;wCAAO;;;;;;kDAE5B,8OAAC;wCACC,QAAO;wCACP,OAAO;4CAAE,UAAU;wCAAO;;;;;;kDAE5B,8OAAC;wCACC,cAAc;4CACZ,iBAAiB;4CACjB,QAAQ;4CACR,cAAc;4CACd,OAAO;wCACT;;;;;;kDAEF,8OAAC;;;;;kDACD,8OAAC;wCACC,MAAK;wCACL,SAAQ;wCACR,QAAO;wCACP,aAAa;wCACb,KAAK;4CAAE,GAAG;4CAAG,MAAM;wCAAU;wCAC7B,WAAW;4CAAE,GAAG;wCAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQlC;uCAEe"}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}